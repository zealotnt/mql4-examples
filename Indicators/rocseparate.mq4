//--------------------------------------------------------------------
// rocseparate.mq4 (Priliv_s)
// Предназначен для использования в качестве примера в учебнике MQL4.
//--------------------------------------------------------------- 1 --
#property copyright "Copyright © SK, 2007"
#property link      "http://AutoGraf.dp.ua"
//--------------------------------------------------------------------
#property indicator_separate_window // Индик.рисуется в отдельном окне
#property indicator_buffers 6       // Количество буферов
#property indicator_color1 Black    // Цвет линии 0 буфера
#property indicator_color2 DarkOrange//Цвет линии 1 буфера
#property indicator_color3 Green    // Цвет линии 2 буфера
#property indicator_color4 Brown    // Цвет линии 3 буфера
#property indicator_color5 Blue     // Цвет линии 4 буфера
#property indicator_color6 Red      // Цвет линии 5 буфера
//--------------------------------------------------------------- 2 --
extern int History    =5000;        // Колич.баров в расчётной истории
extern int Period_MA_1=21;          // Период расчётной МА
extern int Bars_V     =13;          // Колич.баров для расчёта скорост
extern int Aver_Bars  =5;           // Колич. баров для сглаживания
//--------------------------------------------------------------- 3 --
int
   Period_MA_2,  Period_MA_3,       // Расчётные периоды МА для др. ТФ
   K2, K3;                          // Коэффициенты соотношения ТФ
double
   Line_0[],                        // Инидикаторн. массив опорной MA
   Line_1[], Line_2[], Line_3[],    // Инд. массивы линий скорости 
   Line_4[],                        // Инидикаторн. массив суммарный
   Line_5[],                        // Инд.массив суммарный сглаженный
   Sh_1, Sh_2, Sh_3;                // Колич.баров для расч. скоростей
//--------------------------------------------------------------- 4 --
int init()                          // Специальная функция init()
  {
   SetIndexBuffer(0,Line_0);        // Назначение массива буферу
   SetIndexBuffer(1,Line_1);        // Назначение массива буферу
   SetIndexBuffer(2,Line_2);        // Назначение массива буферу
   SetIndexBuffer(3,Line_3);        // Назначение массива буферу
   SetIndexBuffer(4,Line_4);        // Назначение массива буферу
   SetIndexBuffer(5,Line_5);        // Назначение массива буферу
   SetIndexStyle (5,DRAW_LINE,STYLE_SOLID,3);// Стиль линии
//--------------------------------------------------------------- 5 --
   switch(Period())                 // Расчёт коэффициентов для..
     {                              // .. различных ТФ
      case     1: K2=5;K3=15; break;// Таймфрейм М1
      case     5: K2=3;K3= 6; break;// Таймфрейм М5
      case    15: K2=2;K3= 4; break;// Таймфрейм М15
      case    30: K2=2;K3= 8; break;// Таймфрейм М30
      case    60: K2=4;K3=24; break;// Таймфрейм H1
      case   240: K2=6;K3=42; break;// Таймфрейм H4
      case  1440: K2=7;K3=30; break;// Таймфрейм D1
      case 10080: K2=4;K3=12; break;// Таймфрейм W1
      case 43200: K2=3;K3=12; break;// Таймфрейм МN
     }
//--------------------------------------------------------------- 6 --
   Sh_1=Bars_V;                     // Период измерен скорости (баров)
   Sh_2=K2*Sh_1;                    // Период измерен. для ближ. ТФ
   Sh_3=K3*Sh_1;                    // Период измерен. для след. ТФ
   Period_MA_2 =K2*Period_MA_1;     // Расчётн.период МА для ближ. ТФ
   Period_MA_3 =K3*Period_MA_1;     // Расчётн.период МА для след. ТФ
//--------------------------------------------------------------- 7 --
   return;                          // Выход из спец. функции init()
  }
//--------------------------------------------------------------- 8 --
int start()                         // Специальная функция start()
  {
//--------------------------------------------------------------- 9 --
   double
   MA_c, MA_p,                      // Текущее и предыдущ. знач. МА
   Sum;                             // Техн.параметр для накопл. суммы
   int
   i,                               // Индекс бара
   n,                               // Формальн. параметр(индекс бара)
   Counted_bars;                    // Количество просчитанных баров 
//-------------------------------------------------------------- 10 --
   Counted_bars=IndicatorCounted(); // Количество просчитанных баров 
   i=Bars-Counted_bars-1;           // Индекс первого непосчитанного
   if (i>History-1)                 // Если много баров то ..
      i=History-1;                  // ..рассчитывать заданное колич.
//-------------------------------------------------------------- 11 --
   while(i>=0)                      // Цикл по непосчитанным барам
     {
      //-------------------------------------------------------- 12 --
      Line_0[i]=0;                  // Горизонтальная линия отсчёта
      //-------------------------------------------------------- 13 --
      MA_c=iMA(NULL,0,Period_MA_1,0,MODE_LWMA,PRICE_TYPICAL,i);
      MA_p=iMA(NULL,0,Period_MA_1,0,MODE_LWMA,PRICE_TYPICAL,i+Sh_1);
      Line_1[i]= MA_c-MA_p;         // Значение 1 линии скорости
      //-------------------------------------------------------- 14 --
      MA_c=iMA(NULL,0,Period_MA_2,0,MODE_LWMA,PRICE_TYPICAL,i);
      MA_p=iMA(NULL,0,Period_MA_2,0,MODE_LWMA,PRICE_TYPICAL,i+Sh_2);
      Line_2[i]= MA_c-MA_p;         // Значение 2 линии скорости
      //-------------------------------------------------------- 15 --
      MA_c=iMA(NULL,0,Period_MA_3,0,MODE_LWMA,PRICE_TYPICAL,i);
      MA_p=iMA(NULL,0,Period_MA_3,0,MODE_LWMA,PRICE_TYPICAL,i+Sh_3);
      Line_3[i]= MA_c-MA_p;         // Значение 3 линии скорости
      //-------------------------------------------------------- 16 --
      Line_4[i]=(Line_1[i]+Line_2[i]+Line_3[i])/3;// Суммарный массив
      //-------------------------------------------------------- 17 --
      if (Aver_Bars<0)              // Если неверно задано сглаживание
         Aver_Bars=0;               // .. то не меньше нуля
      Sum=0;                        // Технический приём
      for(n=i; n<=i+Aver_Bars; n++) // Суммироваение последних значен.
         Sum=Sum + Line_4[n];       // Накопление суммы последн. знач.
      Line_5[i]= Sum/(Aver_Bars+1); // Индик. массив сглаженной линии
      //-------------------------------------------------------- 18 --
      i--;                          // Расчёт индекса следующего бара
      //-------------------------------------------------------- 19 --
     }
   return;                          // Выход из спец. ф-ии start()
  }
//-------------------------------------------------------------- 20 --