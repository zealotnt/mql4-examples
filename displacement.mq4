//--------------------------------------------------------------------
// displacement.mq4 
// Предназначен для использования в качестве примера в учебнике MQL4.
//--------------------------------------------------------------------
#property indicator_chart_window       // Индик. рисуется в основном окне
#property indicator_buffers 3          // Количество буферов
#property indicator_color1 Red         // Цвет первой линии
#property indicator_color2 Blue        // Цвет второй линии
#property indicator_color3 Green       // Цвет второй линии

extern int History  =500;              // Колич.баров в расчётной истории
extern int Aver_Bars=5;                // Количество баров для расчёта
extern int Left_Right= 5;              // Смещение по горизонтали (баров)
extern int Up_Down  =25;               // Смещение по вертикали (пунктов)

double Line_0[],Line_1[],Line_2[];     // Открытие массивов данных
//--------------------------------------------------------------------
int init()                             // Специальная функция init()
  {
//--------------------------------------------------------------------
   SetIndexBuffer(0,Line_0);           // Назначение массива буферу 0
   SetIndexStyle (0,DRAW_LINE,STYLE_SOLID,2);// Стиль линии
//--------------------------------------------------------------------
   SetIndexBuffer(1,Line_1);           // Назначение массива буферу 1
   SetIndexStyle (1,DRAW_LINE,STYLE_DOT,1);// Стиль линии
//--------------------------------------------------------------------
   SetIndexBuffer(2,Line_2);           // Назначение массива буферу 2
   SetIndexStyle (2,DRAW_LINE,STYLE_DOT,1);// Стиль линии
//--------------------------------------------------------------------
   return;                             // Выход из спец. ф-ии init()
  }
//--------------------------------------------------------------------
int start()                            // Специальная функция start()
  {
   int i,                              // Индекс бара
       n,                              // Формальный параметр (индекс)
       k,                              // Индекс элемента индик. массива
       Counted_bars;                   // Количество просчитанных баров 
       double
       Sum;                            // Сумма Low и High за переиод
//--------------------------------------------------------------------
   Counted_bars=IndicatorCounted();    // Количество просчитанных баров 
   i=Bars-Counted_bars-1;              // Индекс первого непосчитанного
   if (i>History-1)                    // Если много баров то ..
      i=History-1;                     // ..рассчитывать заданное колич.

   while(i>=0)                         // Цикл по непосчитанным барам
     {
      Sum=0;                           // Обнуление в начале цикла
      for(n=i;n<=i+Aver_Bars-1;n++)    // Цикл суммирования значений 
         Sum=Sum + High[n]+Low[n];     // Накопление суммы макс.значений
      k=i+Left_Right;                  // Вычисление расчётного индекса
      Line_0[k]= Sum/2 /Aver_Bars;     // Значение 0 буфера на k-ом баре
      Line_1[k]= Line_0[k]+Up_Down*Point;// Значение 1 буфера 
      Line_2[k]= Line_0[k]-Up_Down*Point;// Значение 2 буфера 

      i--;                             // Расчёт индекса следующего бара
     }
//--------------------------------------------------------------------
   return;                             // Выход из спец. ф-ии start()
  }
//--------------------------------------------------------------------