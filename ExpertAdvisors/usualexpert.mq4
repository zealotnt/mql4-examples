//--------------------------------------------------------------------
// usualexpert.mq4
// Предназначен для использования в качестве примера в учебнике MQL4.
//--------------------------------------------------------------- 1 --
#property copyright "Copyright © Book, 2007"
#property link      "http://AutoGraf.dp.ua"
//--------------------------------------------------------------- 2 --
#include <stdlib.mqh>
#include <stderror.mqh>
#include <WinUser32.mqh>
//--------------------------------------------------------------- 3 --
#include <Variables.mqh>   // Описание переменных 
#include <Check.mqh>       // Проверка легальности использов. программ
#include <Terminal.mqh>    // Учёт ордеров
#include <Events.mqh>      // Функция слежения за событиями, обновлен.
#include <Inform.mqh>      // Информационная функция
#include <Trade.mqh>       // Торговая функция
#include <Open_Ord.mqh>    // Открытие одного ордера заданного типа
#include <Close_All.mqh>   // Закрытие  всех ордеров заданного типа
#include <Tral_Stop.mqh>   // Модификация StopLoss всех ордеров типа
#include <Lot.mqh>         // Вычисление количества лотов
#include <Criterion.mqh>   // Торговые критерии
#include <Errors.mqh>      // Функция обработки ошибок.
//--------------------------------------------------------------- 4 --
int init()                             // Спец. функция init
  {
   Level_old=MarketInfo(Symbol(),MODE_STOPLEVEL );//Миним. дистаниция
   Terminal();                         // Функция учёта ордеров 
   return;                             // Выход из init() 
  }
//--------------------------------------------------------------- 5 --
int start()                            // Спец. функция start
  {
   if(Check()==false)                  // Если условия использования..
      return;                          // ..не выполняются, то выход
   PlaySound("tick.wav");              // На каждом тике
   Terminal();                         // Функция учёта ордеров 
   Events();                           // Информация о событиях
   Trade(Criterion());                 // Торговая функция
   Inform(0);                          // Для перекрашивания объектов
   return;                             // Выход из start()
  }
//--------------------------------------------------------------- 6 --
int deinit()                           // Спец. функция deinit()
  {
   Inform(-1);                         // Для удаления объектов
   return;                             // Выход из deinit()
  }
//--------------------------------------------------------------- 7 --